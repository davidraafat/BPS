{"remainingRequest":"D:\\Outlook\\Github\\BPS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Outlook\\Github\\BPS\\src\\pages\\Altura.vue?vue&type=template&id=d3dd633e&scoped=true","dependencies":[{"path":"D:\\Outlook\\Github\\BPS\\src\\pages\\Altura.vue","mtime":1741480283561},{"path":"D:\\Outlook\\Github\\BPS\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Outlook\\Github\\BPS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Outlook\\Github\\BPS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Outlook\\Github\\BPS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}